"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/react-playground/index.html","fe04d54e9e3abfd0e4d91369d2926c6c"],["/react-playground/static/js/main.1056fe28.js","a87daea173e91ebf60f43fe31f050230"],["/react-playground/static/media/$-big.046af30f.jpeg","046af30fb8e714e290b3bd5bb9ac0783"],["/react-playground/static/media/$.b02def74.jpeg","b02def742ee8a6876a336ca54fa0725a"],["/react-playground/static/media/call-stack-big.85bdec2d.png","85bdec2d8c48ec16020f9a4ce37377da"],["/react-playground/static/media/call-stack.e8dce350.png","e8dce350f7d615f6cd5106c26c302862"],["/react-playground/static/media/command-big.02d0b026.png","02d0b0263708fe488cd65895539f546d"],["/react-playground/static/media/command.f52d802a.png","f52d802a4e4515d60157678cd0aa7ace"],["/react-playground/static/media/event-loop-big.ca470211.png","ca470211eb4ffba69d4359438e739596"],["/react-playground/static/media/event-loop.fbb0abad.png","fbb0abad4855bb6f29015b5fb236a5ff"],["/react-playground/static/media/module-big.8136f2f1.png","8136f2f1b1c5bf145cdb1cd19af5de3a"],["/react-playground/static/media/module.fb08726f.png","fb08726fafd4197796bb2ba6c9f627e6"],["/react-playground/static/media/nodejs-big.6a716140.png","6a716140ea15889fe5a87ab0ecac52b5"],["/react-playground/static/media/nodejs.afca2366.png","afca236644acfa68d0b766cc1092997e"],["/react-playground/static/media/v8-big.63c318e1.png","63c318e1a4c731362cabfb5ad6d92e1b"],["/react-playground/static/media/v8.105b092a.png","105b092a3368206e3784064b03affdfc"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/react-playground/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});